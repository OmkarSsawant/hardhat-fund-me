{
  "address": "0xbEaF6F3Fa89036C2A1bd230243cC637A1E4673a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundersToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x838123880433a9bd9bb1610afe5bd7785f6a77b849f3be4f0555b215644b20f4",
  "receipt": {
    "to": null,
    "from": "0x66771590dfCB84e582EbD1B50CA8cB13Bc65eD70",
    "contractAddress": "0xbEaF6F3Fa89036C2A1bd230243cC637A1E4673a2",
    "transactionIndex": 51,
    "gasUsed": "883981",
    "logsBloom": "0x
    "blockHash": "0xea86216dfab3c7a60e98dd8343eae07d58ef8b4cdf42fd5aad235d533e1d5018",
    "transactionHash": "0x838123880433a9bd9bb1610afe5bd7785f6a77b849f3be4f0555b215644b20f4",
    "logs": [],
    "blockNumber": 3161151,
    "cumulativeGasUsed": "12060592",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "23aa86daf8d5c03fab08c4e969af13a3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundersToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe{\\r\\n    using PriceConvertor for uint;\\r\\n    uint transactionsCount = 0;\\r\\n    mapping(address => uint) public fundersToAmount;\\r\\n    address[] public funders;\\r\\n    uint public constant MIN_USD = 50 * 1e18;\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    /* constant and immutable (can be init only once)  , custom errors are used to save gas , bcz saved in bytecode */\\r\\n\\r\\n\\r\\n    address public immutable i_owner;\\r\\n    constructor(address feeder){\\r\\n        //As Constructor is called once so owner will be one whoever deploys the contract\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(feeder);\\r\\n        \\r\\n    }\\r\\n\\r\\n    function fund() public payable{\\r\\n        transactionsCount = transactionsCount +1;\\r\\n        require(msg.value.getConversionRate(priceFeed) >= MIN_USD,\\\"Not Sufficient Balance\\\");\\r\\n        //if this fails\\r\\n        //all the code that was executed is reverted \\r\\n        //i.e, transactionsCount will be again transactionsCount-1\\r\\n        fundersToAmount[msg.sender] += msg.value;\\r\\n        funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner{\\r\\n        for(uint i=0;i<funders.length;i++){\\r\\n            fundersToAmount[funders[i]] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        /*\\r\\n        //Three ways to withdraw\\r\\n        //trasfer\\r\\n        //send\\r\\n        //call\\r\\n        //to make transaction account address should be payable\\r\\n        // payable(msg.sender).transfer(address(this).balance);//transfers and automatically reverts if fails, has gas limit\\r\\n\\r\\n        // bool paySuccess = payable(msg.sender).send(address(this).balance); //transfers and needs manual revert like below , has gas limit\\r\\n        // require(paySuccess,\\\"Transaction Failed\\\");\\r\\n        */\\r\\n\\r\\n        \\r\\n        (bool success,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\"); //transfers and needs manual revert like below , has gas limit\\r\\n        require(success,\\\"Transaction Failed\\\");\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    modifier onlyOwner{\\r\\n        // require(i_owner == msg.sender,\\\"Only Owners can withdraw Money\\\");\\r\\n        if(msg.sender != i_owner){\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable{\\r\\n        //It gets called whenever this contract receives transaction\\r\\n        //without calling fund , like direct transfer from metamask\\r\\n        //only that a little more gas is charged\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable{\\r\\n        //When Data is transfered to contract \\r\\n        //But there is no one to receive \\r\\n        //`fallback` is called\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x3cb546f67a2196e584796eefaa4c3fdc2ec1e743e93afc88b6409d57c7d1d678\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConvertor{\\r\\n\\r\\n        /*\\r\\n    - Sepolia Testnet \\r\\n    - ETH/USD\\r\\n    - 0x694AA1769357215DE4FAC081bf1f309aDC325306 (Each net can have different aggregator(here)/contract address)\\r\\n    */\\r\\n    function getPrice(AggregatorV3Interface priceFeed)internal view returns (uint) {\\r\\n        (,int price,,,) = priceFeed.latestRoundData(); //ETH in terms of USD\\r\\n        return uint(price * 10e10); //to match tens of eth as it as 18zeros and price has 8tens\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint ethAmount,AggregatorV3Interface priceFeed) internal view returns (uint) {\\r\\n        uint ethPrice = getPrice(priceFeed);\\r\\n        uint ethInUsd = (ethPrice * ethAmount) / 1e18; //as both have e18 so zeros become e36\\r\\n        return ethInUsd; \\r\\n    }\\r\\n}\",\"keccak256\":\"0x17bc9c83d6089b85e732b6d88760c0516794ccf1f72fb0a4fa6d2b1693f39499\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526000805534801561001457600080fd5b5060405162000ffc38038062000ffc83398181016040528101906100389190610119565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610146565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e6826100bb565b9050919050565b6100f6816100db565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b60006020828403121561012f5761012e6100b6565b5b600061013d84828501610104565b91505092915050565b60805160601c610e906200016c6000396000818161030801526105810152610e906000f3fe6080604052600436106100745760003560e01c80639f883a051161004e5780639f883a05146100fa578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102f9565b6040516100af919061077e565b60405180910390f35b3480156100c457600080fd5b506100cd610306565b005b3480156100db57600080fd5b506100e4610541565b6040516100f19190610818565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190610876565b610567565b60405161012e919061077e565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661057f565b60405161016391906108b2565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108f9565b6105a3565b6040516101a091906108b2565b60405180910390f35b60016000546101b89190610955565b6000819055506802b5e3af16b18800006101fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e290919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610a08565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028d9190610955565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561043157600060016000600284815481106103b5576103b4610a28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061042990610a57565b91505061038e565b50600067ffffffffffffffff81111561044d5761044c610aa0565b5b60405190808252806020026020018201604052801561047b5781602001602082028036833780820191505090505b50600290805190602001906104919291906106be565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b890610b00565b60006040518083038185875af1925050503d80600081146104f5576040519150601f19603f3d011682016040523d82523d6000602084013e6104fa565b606091505b505090508061053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610b61565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600281815481106105b357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ee8361061e565b90506000670de0b6b3a764000085836106079190610b81565b6106119190610c0a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066757600080fd5b505afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190610cc8565b50505091505064174876e800816106b69190610d43565b915050919050565b828054828255906000526020600020908101928215610737579160200282015b828111156107365782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106de565b5b5090506107449190610748565b5090565b5b80821115610761576000816000905550600101610749565b5090565b6000819050919050565b61077881610765565b82525050565b6000602082019050610793600083018461076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107de6107d96107d484610799565b6107b9565b610799565b9050919050565b60006107f0826107c3565b9050919050565b6000610802826107e5565b9050919050565b610812816107f7565b82525050565b600060208201905061082d6000830184610809565b92915050565b600080fd5b600061084382610799565b9050919050565b61085381610838565b811461085e57600080fd5b50565b6000813590506108708161084a565b92915050565b60006020828403121561088c5761088b610833565b5b600061089a84828501610861565b91505092915050565b6108ac81610838565b82525050565b60006020820190506108c760008301846108a3565b92915050565b6108d681610765565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610833565b5b600061091d848285016108e4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061096082610765565b915061096b83610765565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a05761099f610926565b5b828201905092915050565b600082825260208201905092915050565b7f4e6f742053756666696369656e742042616c616e636500000000000000000000600082015250565b60006109f26016836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6282610765565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9557610a94610926565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aea600083610acf565b9150610af582610ada565b600082019050919050565b6000610b0b82610add565b9150819050919050565b7f5472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000610b4b6012836109ab565b9150610b5682610b15565b602082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b6000610b8c82610765565b9150610b9783610765565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd057610bcf610926565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1582610765565b9150610c2083610765565b925082610c3057610c2f610bdb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5a81610c3b565b8114610c6557600080fd5b50565b600081519050610c7781610c51565b92915050565b6000819050919050565b610c9081610c7d565b8114610c9b57600080fd5b50565b600081519050610cad81610c87565b92915050565b600081519050610cc2816108cd565b92915050565b600080600080600060a08688031215610ce457610ce3610833565b5b6000610cf288828901610c68565b9550506020610d0388828901610c9e565b9450506040610d1488828901610cb3565b9350506060610d2588828901610cb3565b9250506080610d3688828901610c68565b9150509295509295909350565b6000610d4e82610c7d565b9150610d5983610c7d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9857610d97610926565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd557610dd4610926565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1257610e11610926565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4f57610e4e610926565b5b82820290509291505056fea2646970667358221220f37fd4d66d12b3c66fc834949b3a2571692c794433dc7887313c3f126b9a0f4764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639f883a051161004e5780639f883a05146100fa578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102f9565b6040516100af919061077e565b60405180910390f35b3480156100c457600080fd5b506100cd610306565b005b3480156100db57600080fd5b506100e4610541565b6040516100f19190610818565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190610876565b610567565b60405161012e919061077e565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661057f565b60405161016391906108b2565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108f9565b6105a3565b6040516101a091906108b2565b60405180910390f35b60016000546101b89190610955565b6000819055506802b5e3af16b18800006101fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e290919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610a08565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028d9190610955565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561043157600060016000600284815481106103b5576103b4610a28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061042990610a57565b91505061038e565b50600067ffffffffffffffff81111561044d5761044c610aa0565b5b60405190808252806020026020018201604052801561047b5781602001602082028036833780820191505090505b50600290805190602001906104919291906106be565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b890610b00565b60006040518083038185875af1925050503d80600081146104f5576040519150601f19603f3d011682016040523d82523d6000602084013e6104fa565b606091505b505090508061053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610b61565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600281815481106105b357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ee8361061e565b90506000670de0b6b3a764000085836106079190610b81565b6106119190610c0a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066757600080fd5b505afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190610cc8565b50505091505064174876e800816106b69190610d43565b915050919050565b828054828255906000526020600020908101928215610737579160200282015b828111156107365782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106de565b5b5090506107449190610748565b5090565b5b80821115610761576000816000905550600101610749565b5090565b6000819050919050565b61077881610765565b82525050565b6000602082019050610793600083018461076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107de6107d96107d484610799565b6107b9565b610799565b9050919050565b60006107f0826107c3565b9050919050565b6000610802826107e5565b9050919050565b610812816107f7565b82525050565b600060208201905061082d6000830184610809565b92915050565b600080fd5b600061084382610799565b9050919050565b61085381610838565b811461085e57600080fd5b50565b6000813590506108708161084a565b92915050565b60006020828403121561088c5761088b610833565b5b600061089a84828501610861565b91505092915050565b6108ac81610838565b82525050565b60006020820190506108c760008301846108a3565b92915050565b6108d681610765565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610833565b5b600061091d848285016108e4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061096082610765565b915061096b83610765565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a05761099f610926565b5b828201905092915050565b600082825260208201905092915050565b7f4e6f742053756666696369656e742042616c616e636500000000000000000000600082015250565b60006109f26016836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6282610765565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9557610a94610926565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aea600083610acf565b9150610af582610ada565b600082019050919050565b6000610b0b82610add565b9150819050919050565b7f5472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000610b4b6012836109ab565b9150610b5682610b15565b602082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b6000610b8c82610765565b9150610b9783610765565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd057610bcf610926565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1582610765565b9150610c2083610765565b925082610c3057610c2f610bdb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5a81610c3b565b8114610c6557600080fd5b50565b600081519050610c7781610c51565b92915050565b6000819050919050565b610c9081610c7d565b8114610c9b57600080fd5b50565b600081519050610cad81610c87565b92915050565b600081519050610cc2816108cd565b92915050565b600080600080600060a08688031215610ce457610ce3610833565b5b6000610cf288828901610c68565b9550506020610d0388828901610c9e565b9450506040610d1488828901610cb3565b9350506060610d2588828901610cb3565b9250506080610d3688828901610c68565b9150509295509295909350565b6000610d4e82610c7d565b9150610d5983610c7d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9857610d97610926565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd557610dd4610926565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1257610e11610926565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4f57610e4e610926565b5b82820290509291505056fea2646970667358221220f37fd4d66d12b3c66fc834949b3a2571692c794433dc7887313c3f126b9a0f4764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "transactionsCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "fundersToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}