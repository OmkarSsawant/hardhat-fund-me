{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasEffectiveWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAddress",
          "type": "address"
        }
      ],
      "name": "getFundersToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x811bf0f208ae732aa92527cad5950720965c5b759776aa8aa95c3c8fbd34f6c8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1047805",
    "logsBloom": "0x
    "blockHash": "0xabc5b196d539f0ca246e102f3fa0632bca317f2d1b934ce0451f8a044d4ad3a1",
    "transactionHash": "0x811bf0f208ae732aa92527cad5950720965c5b759776aa8aa95c3c8fbd34f6c8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1047805",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "55f5763373a6813e66c0d73479246312",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasEffectiveWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getFundersToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"./PriceConvertor.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe{\\r\\n    using PriceConvertor for uint;\\r\\n    uint s_transactionsCount = 0;\\r\\n    mapping(address => uint) private s_fundersToAmount;\\r\\n    address[] private s_funders;\\r\\n    uint public constant MIN_USD = 50 * 1e18;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n    /* constant and immutable (can be init only once)  , custom errors are used to save gas , bcz saved in bytecode */\\r\\n\\r\\n\\r\\n    address public immutable i_owner;\\r\\n\\r\\n    modifier onlyOwner{\\r\\n        // require(i_owner == msg.sender,\\\"Only Owners can withdraw Money\\\");\\r\\n        if(msg.sender != i_owner){\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    constructor(address feeder){\\r\\n        //As Constructor is called once so owner will be one whoever deploys the contract\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(feeder);\\r\\n        \\r\\n    }\\r\\n\\r\\n    receive() external payable{\\r\\n        //It gets called whenever this contract receives transaction\\r\\n        //without calling fund , like direct transfer from metamask\\r\\n        //only that a little more gas is charged\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable{\\r\\n        //When Data is transfered to contract \\r\\n        //But there is no one to receive \\r\\n        //`fallback` is called\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n\\r\\n    function fund() public payable{\\r\\n        s_transactionsCount = s_transactionsCount +1;\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\\"Not Sufficient Balance\\\");\\r\\n        //if this fails\\r\\n        //all the code that was executed is reverted \\r\\n        //i.e, s_transactionsCount will be again s_transactionsCount-1\\r\\n        s_fundersToAmount[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner{\\r\\n        for(uint i=0;i<s_funders.length;i++){\\r\\n            s_fundersToAmount[s_funders[i]] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        /*\\r\\n        //Three ways to withdraw\\r\\n        //trasfer\\r\\n        //send\\r\\n        //call\\r\\n        //to make transaction account address should be payable\\r\\n        // payable(msg.sender).transfer(address(this).balance);//transfers and automatically reverts if fails, has gas limit\\r\\n\\r\\n        // bool paySuccess = payable(msg.sender).send(address(this).balance); //transfers and needs manual revert like below , has gas limit\\r\\n        // require(paySuccess,\\\"Transaction Failed\\\");\\r\\n        */\\r\\n\\r\\n        \\r\\n        (bool success,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\"); //transfers and needs manual revert like below , has gas limit\\r\\n        require(success,\\\"Transaction Failed\\\");\\r\\n\\r\\n    }\\r\\n\\r\\n    function gasEffectiveWithdraw() public onlyOwner{\\r\\n        address[] memory funders = s_funders;\\r\\n         for(uint i=0;i<funders.length;i++){\\r\\n            s_fundersToAmount[funders[i]] = 0;\\r\\n        }\\r\\n              (bool success,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\"); //transfers and needs manual revert like below , has gas limit\\r\\n        require(success,\\\"Transaction Failed\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    function getFundersToAmount(address funderAddress)\\r\\n    public \\r\\n    view \\r\\n    returns (uint){\\r\\n        return s_fundersToAmount[funderAddress];\\r\\n    }\\r\\n\\r\\n\\r\\n  function getFunder(uint index)\\r\\n    public \\r\\n    view \\r\\n    returns (address){\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n\\r\\n      function getOwner()\\r\\n    public \\r\\n    view \\r\\n    returns (address){\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n      function getPriceFeed()\\r\\n    public \\r\\n    view \\r\\n    returns (AggregatorV3Interface){\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x2a7684ff3580749bf60cfacecb747f0041325568cff738e17a7a5c3a0175bc73\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConvertor{\\r\\n\\r\\n        /*\\r\\n    - Sepolia Testnet \\r\\n    - ETH/USD\\r\\n    - 0x694AA1769357215DE4FAC081bf1f309aDC325306 (Each net can have different aggregator(here)/contract address)\\r\\n    */\\r\\n    function getPrice(AggregatorV3Interface priceFeed)internal view returns (uint) {\\r\\n        (,int price,,,) = priceFeed.latestRoundData(); //ETH in terms of USD\\r\\n        return uint(price * 10e10); //to match tens of eth as it as 18zeros and price has 8tens\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint ethAmount,AggregatorV3Interface priceFeed) internal view returns (uint) {\\r\\n        uint ethPrice = getPrice(priceFeed);\\r\\n        uint ethInUsd = (ethPrice * ethAmount) / 1e18; //as both have e18 so zeros become e36\\r\\n        return ethInUsd; \\r\\n    }\\r\\n}\",\"keccak256\":\"0x17bc9c83d6089b85e732b6d88760c0516794ccf1f72fb0a4fa6d2b1693f39499\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052600080553480156200001557600080fd5b50604051620013173803806200131783398181016040528101906200003b919062000124565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000156565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ec82620000bf565b9050919050565b620000fe81620000df565b81146200010a57600080fd5b50565b6000815190506200011e81620000f3565b92915050565b6000602082840312156200013d576200013c620000ba565b5b60006200014d848285016200010d565b91505092915050565b60805160601c61118d6200018a600039600081816103600152818161059d015281816105ed01526108bd015261118d6000f3fe60806040526004361061008a5760003560e01c8063aeb7bc6011610059578063aeb7bc601461013b578063b60d428814610152578063b8c67af31461015c578063d7b4750c14610199578063dba6335f146101d657610099565b8063213dbea2146100a35780633ccfd60b146100ce578063893d20e8146100e55780639e87a5cd1461011057610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b8610351565b6040516100c59190610a7b565b60405180910390f35b3480156100da57600080fd5b506100e361035e565b005b3480156100f157600080fd5b506100fa610599565b6040516101079190610ad7565b60405180910390f35b34801561011c57600080fd5b506101256105c1565b6040516101329190610b51565b60405180910390f35b34801561014757600080fd5b506101506105eb565b005b61015a610201565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b9d565b61082a565b6040516101909190610a7b565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb9190610bf6565b610873565b6040516101cd9190610ad7565b60405180910390f35b3480156101e257600080fd5b506101eb6108bb565b6040516101f89190610ad7565b60405180910390f35b60016000546102109190610c52565b6000819055506802b5e3af16b1880000610255600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108df90919063ffffffff16565b1015610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d90610d05565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e59190610c52565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e3576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610489576000600160006002848154811061040d5761040c610d25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061048190610d54565b9150506103e6565b50600067ffffffffffffffff8111156104a5576104a4610d9d565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600290805190602001906104e99291906109bb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051090610dfd565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b5050905080610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610e5e565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156106f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106aa575b5050505050905060005b8151811015610779576000600160008484815181106107205761071f610d25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061077190610d54565b9150506106fe565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107a090610dfd565b60006040518083038185875af1925050503d80600081146107dd576040519150601f19603f3d011682016040523d82523d6000602084013e6107e2565b606091505b5050905080610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90610e5e565b60405180910390fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002828154811061088957610888610d25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108eb8361091b565b90506000670de0b6b3a764000085836109049190610e7e565b61090e9190610f07565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096457600080fd5b505afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190610fc5565b50505091505064174876e800816109b39190611040565b915050919050565b828054828255906000526020600020908101928215610a34579160200282015b82811115610a335782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109db565b5b509050610a419190610a45565b5090565b5b80821115610a5e576000816000905550600101610a46565b5090565b6000819050919050565b610a7581610a62565b82525050565b6000602082019050610a906000830184610a6c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac182610a96565b9050919050565b610ad181610ab6565b82525050565b6000602082019050610aec6000830184610ac8565b92915050565b6000819050919050565b6000610b17610b12610b0d84610a96565b610af2565b610a96565b9050919050565b6000610b2982610afc565b9050919050565b6000610b3b82610b1e565b9050919050565b610b4b81610b30565b82525050565b6000602082019050610b666000830184610b42565b92915050565b600080fd5b610b7a81610ab6565b8114610b8557600080fd5b50565b600081359050610b9781610b71565b92915050565b600060208284031215610bb357610bb2610b6c565b5b6000610bc184828501610b88565b91505092915050565b610bd381610a62565b8114610bde57600080fd5b50565b600081359050610bf081610bca565b92915050565b600060208284031215610c0c57610c0b610b6c565b5b6000610c1a84828501610be1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5d82610a62565b9150610c6883610a62565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c9d57610c9c610c23565b5b828201905092915050565b600082825260208201905092915050565b7f4e6f742053756666696369656e742042616c616e636500000000000000000000600082015250565b6000610cef601683610ca8565b9150610cfa82610cb9565b602082019050919050565b60006020820190508181036000830152610d1e81610ce2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5f82610a62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9257610d91610c23565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de7600083610dcc565b9150610df282610dd7565b600082019050919050565b6000610e0882610dda565b9150819050919050565b7f5472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000610e48601283610ca8565b9150610e5382610e12565b602082019050919050565b60006020820190508181036000830152610e7781610e3b565b9050919050565b6000610e8982610a62565b9150610e9483610a62565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecd57610ecc610c23565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1282610a62565b9150610f1d83610a62565b925082610f2d57610f2c610ed8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5781610f38565b8114610f6257600080fd5b50565b600081519050610f7481610f4e565b92915050565b6000819050919050565b610f8d81610f7a565b8114610f9857600080fd5b50565b600081519050610faa81610f84565b92915050565b600081519050610fbf81610bca565b92915050565b600080600080600060a08688031215610fe157610fe0610b6c565b5b6000610fef88828901610f65565b955050602061100088828901610f9b565b945050604061101188828901610fb0565b935050606061102288828901610fb0565b925050608061103388828901610f65565b9150509295509295909350565b600061104b82610f7a565b915061105683610f7a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109557611094610c23565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d2576110d1610c23565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110f5761110e610c23565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114c5761114b610c23565b5b82820290509291505056fea2646970667358221220bc5a8feb46d88cae621fbd25e094c7c132d0867e077162cbf5a514df250d94f464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063aeb7bc6011610059578063aeb7bc601461013b578063b60d428814610152578063b8c67af31461015c578063d7b4750c14610199578063dba6335f146101d657610099565b8063213dbea2146100a35780633ccfd60b146100ce578063893d20e8146100e55780639e87a5cd1461011057610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b8610351565b6040516100c59190610a7b565b60405180910390f35b3480156100da57600080fd5b506100e361035e565b005b3480156100f157600080fd5b506100fa610599565b6040516101079190610ad7565b60405180910390f35b34801561011c57600080fd5b506101256105c1565b6040516101329190610b51565b60405180910390f35b34801561014757600080fd5b506101506105eb565b005b61015a610201565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b9d565b61082a565b6040516101909190610a7b565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb9190610bf6565b610873565b6040516101cd9190610ad7565b60405180910390f35b3480156101e257600080fd5b506101eb6108bb565b6040516101f89190610ad7565b60405180910390f35b60016000546102109190610c52565b6000819055506802b5e3af16b1880000610255600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108df90919063ffffffff16565b1015610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d90610d05565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e59190610c52565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e3576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610489576000600160006002848154811061040d5761040c610d25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061048190610d54565b9150506103e6565b50600067ffffffffffffffff8111156104a5576104a4610d9d565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600290805190602001906104e99291906109bb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051090610dfd565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b5050905080610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610e5e565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156106f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106aa575b5050505050905060005b8151811015610779576000600160008484815181106107205761071f610d25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061077190610d54565b9150506106fe565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107a090610dfd565b60006040518083038185875af1925050503d80600081146107dd576040519150601f19603f3d011682016040523d82523d6000602084013e6107e2565b606091505b5050905080610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90610e5e565b60405180910390fd5b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002828154811061088957610888610d25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108eb8361091b565b90506000670de0b6b3a764000085836109049190610e7e565b61090e9190610f07565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096457600080fd5b505afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190610fc5565b50505091505064174876e800816109b39190611040565b915050919050565b828054828255906000526020600020908101928215610a34579160200282015b82811115610a335782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109db565b5b509050610a419190610a45565b5090565b5b80821115610a5e576000816000905550600101610a46565b5090565b6000819050919050565b610a7581610a62565b82525050565b6000602082019050610a906000830184610a6c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac182610a96565b9050919050565b610ad181610ab6565b82525050565b6000602082019050610aec6000830184610ac8565b92915050565b6000819050919050565b6000610b17610b12610b0d84610a96565b610af2565b610a96565b9050919050565b6000610b2982610afc565b9050919050565b6000610b3b82610b1e565b9050919050565b610b4b81610b30565b82525050565b6000602082019050610b666000830184610b42565b92915050565b600080fd5b610b7a81610ab6565b8114610b8557600080fd5b50565b600081359050610b9781610b71565b92915050565b600060208284031215610bb357610bb2610b6c565b5b6000610bc184828501610b88565b91505092915050565b610bd381610a62565b8114610bde57600080fd5b50565b600081359050610bf081610bca565b92915050565b600060208284031215610c0c57610c0b610b6c565b5b6000610c1a84828501610be1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5d82610a62565b9150610c6883610a62565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c9d57610c9c610c23565b5b828201905092915050565b600082825260208201905092915050565b7f4e6f742053756666696369656e742042616c616e636500000000000000000000600082015250565b6000610cef601683610ca8565b9150610cfa82610cb9565b602082019050919050565b60006020820190508181036000830152610d1e81610ce2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5f82610a62565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9257610d91610c23565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de7600083610dcc565b9150610df282610dd7565b600082019050919050565b6000610e0882610dda565b9150819050919050565b7f5472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000610e48601283610ca8565b9150610e5382610e12565b602082019050919050565b60006020820190508181036000830152610e7781610e3b565b9050919050565b6000610e8982610a62565b9150610e9483610a62565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecd57610ecc610c23565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1282610a62565b9150610f1d83610a62565b925082610f2d57610f2c610ed8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5781610f38565b8114610f6257600080fd5b50565b600081519050610f7481610f4e565b92915050565b6000819050919050565b610f8d81610f7a565b8114610f9857600080fd5b50565b600081519050610faa81610f84565b92915050565b600081519050610fbf81610bca565b92915050565b600080600080600060a08688031215610fe157610fe0610b6c565b5b6000610fef88828901610f65565b955050602061100088828901610f9b565b945050604061101188828901610fb0565b935050606061102288828901610fb0565b925050608061103388828901610f65565b9150509295509295909350565b600061104b82610f7a565b915061105683610f7a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109557611094610c23565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d2576110d1610c23565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110f5761110e610c23565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114c5761114b610c23565b5b82820290509291505056fea2646970667358221220bc5a8feb46d88cae621fbd25e094c7c132d0867e077162cbf5a514df250d94f464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_transactionsCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_fundersToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}